{"name":"Belly Procd","tagline":"System resource and profile information emission","body":"# Procd\r\n\r\nSystem resource and profile information emission. A simple method of exposing system resources statistics through standard interfaces. Current interfaces are stdout, JSON over HTTP, and as a client to [Mozilla Hekad](https://github.com/mozilla-services/heka).\r\n\r\n\r\n# Installation\r\n\r\nThis will eventually be rolled up into a make file.\r\n\r\n- Install Go v1.1+\r\n- Install Git\r\n- Install Mercurial (Needed to download the UUID package from Google)\r\n- git clone https://github.com/bellycard/procd.git\r\n- go get github.com/bellycard/toml\r\n- go get code.google.com/p/go-uuid/uuid\r\n- go get github.com/mozilla-services/heka/client\r\n- go get github.com/mozilla-services/heka/message\r\n- go build\r\n- ./procd -config=procd.toml\r\n\r\n\r\n# Configuration\r\n\r\nConfiguartion of Procd is based on a specified [TOML](https://github.com/mojombo/toml) configuration file. Defined outputs will have metrics and profile information emitted if specified.\r\n\r\n### Example Configuration\r\n\r\nThis configuration will emit metric information in JSON format to STDOUT, localhost:5596, and to a local Hekad agent.\r\n\r\n```\r\nticker_interval = 5 # Time (seconds) to poll resources and collect metrics\r\n\r\n[output.stdout]\r\n\r\n[output.http]\r\nbind_address = \"0.0.0.0:5596\"\r\n\r\n[output.heka]\r\nserver = \"127.0.0.1:5565\"\r\nencoder = \"protobuf\"\r\nsender = \"tcp\"\r\npayload = false\r\nhostname = \"super.coolhost.com\" # Optional. Overwrites os.Hostname() for Heka messages.\r\n```\r\n\r\n\r\n# Usage\r\n\r\n### HTTP\r\n\r\nTo view all resources: ```GET http://hostname:5596/v1/resources.json```\r\nTo view CPU resources: ```GET http://hostname:5596/v1/resources/cpu.json```\r\nTo view memory resources: ```GET http://hostname:5596/v1/resources/memory.json```\r\nTo view disk resources: ```GET http://hostname:5596/v1/resources/disk.json```\r\nTo ensure the application is operational: ```GET http://hostname:5596/ping```\r\n\r\n### Benchmark Information\r\n\r\nTo view benchmark information: ```go test -bench=\".*\"```\r\n\r\n\r\n# Roadmap\r\n- Statsd output\r\n- Currently only Linux /proc stats are collected. Profile information will be next.\r\n- Only the Linux platform is supported. Other platforms, Darwin notibly, will be included.\r\n\r\n\r\n# Versioning\r\n\r\nVersioning adheres to [Semantic Versioning 2.0.0](http://semver.org/spec/v2.0.0.html).\r\n\r\n\r\n# Author(s) & Credit\r\n\r\n**Christian Vozar**\r\n\r\n+ [http://twitter.com/christianvozar](http://twitter.com/christianvozar)\r\n+ [http://github.com/christianvozar](http://github.com/christianvozar)\r\n\r\nCredit given to Mozilla's [PushGo](https://github.com/jrconlin/pushgo/blob/master/src/mozilla.org/util/heka_log.go) for Heka client code for which the Heka code is heavily based.\r\n\r\n## Copyright and License\r\n\r\nCopyright 2013 Belly, Inc. under [the Apache 2.0 license](LICENSE.md).","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}